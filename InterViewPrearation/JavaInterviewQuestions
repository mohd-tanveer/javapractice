#JavaInterview question and answers
@ https://www.java67.com/
@ https://www.baeldung.com/

java8 feature
https://www.baeldung.com/tag/java-8/
java8 interview question 
https://www.baeldung.com/java-8-interview-questions

100 interview question for java
https://medium.com/edureka/java-interview-questions-1d59b9c53973

-> Why is JAVA a platform independent language?
    Java compiler produces a unique type of code called bytecode unlike c compiler where compiler produces only natively executable code for a particular machine.
    When the Java program runs in a particular machine it is sent to java compiler, which converts this code into intermediate code called bytecode. 
    This bytecode is sent to Java virtual machine (JVM) which resides in the RAM of any operating system.
    JVM recognizes the platform it is on and converts the bytecodes into native machine code. Hence java is called platform independent language.
    https://medium.com/@neil.wilston123/why-java-is-platform-independent-1d82c2249a69
    
-> Deep, Shallow and Lazy Copy with Java Examples
    https://www.geeksforgeeks.org/deep-shallow-lazy-copy-java-examples/#:~:text=In%20shallow%20copy%2C%20only%20fields,as%20well%20as%20objet%20references.

-> What is Inversion control , dependecy injection , solid principle?
    ans: https://practice.geeksforgeeks.org/problems/inversion-of-control 
     https://alexalvess.medium.com/dependency-injection-and-inversion-of-control-on-net-core-3136fe98b72  
     https://www.baeldung.com/inversion-control-and-dependency-injection-in-spring
        
-> OOP Design principle 
  ans: https://hackernoon.com/10-oop-design-principles-every-programmer-should-know-f187436caf65
  ocp(https://medium.com/@gabriellamedas/ocp-the-open-closed-principle-b994922bed94)
  
-> Public vs Protected vs Package vs Private modifier in Java
  ans:   https://www.java67.com/2012/12/what-is-public-private-protected-package-default-private-access-modifier-java.html#ixzz6sDba5vYq
  
-> Dispatcher servlet : The job of the DispatcherServlet is to take an incoming URI and find the right combination of handlers (generally methods on Controller classes) 
    and views (generally JSPs) that combine to form the page or resource that's supposed to be found at that location.(stackoverflow)
    https://www.java67.com/2017/06/what-is-use-of-dispatcherservlet-in-spring-mvc.html

-> Interview Question on Thread.
   https://javarevisited.blogspot.com/2018/07/java-multi-threading-interview-questions-answers-from-investment-banks.html#axzz6sg4Jx64m
  
-> Spring bean scopes 

singelton --> every time same object will be returned   @Scope("singelton") or @Scope(value = ConfigurableBeanFactory.singelton_scope)

Pototype -->every time we ask the instance to the cotainer it gives us brand new instance @Scope("protype");

what will happen if we can prototype in a singelton bean --> same object will be returned so to solve that --> https://www.youtube.com/watch?v=xpKbs8FHUi4  58:37 
  use a proxy method , along with prototype  @Scope(value = "prototype" , proxyMode = ScopeProxyMode.TARGET_CLASS)
  
  instead of proxy we can also use @Lookup 
  
  
  
